# Generated by Django 2.1 on 2018-11-04 18:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Association',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('founded_on', models.DateField()),
                ('dissolved_on', models.DateField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'pm_Association',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssociationToAssociationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_until', models.DateField()),
                ('valid_from', models.DateField()),
                ('approved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approved_associationtoassociationmemberships', related_query_name='associationtoassociationmembership_approver', to=settings.AUTH_USER_MODEL)),
                ('governor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='association_governing', to='player_management.Association')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='association_memberships', to='player_management.Association')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_associationtoassociationmemberships', related_query_name='associationtoassociationmembership_reporter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'pm_AssociationToAssociationMembership',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('founded_on', models.DateField()),
                ('dissolved_on', models.DateField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'pm_Club',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClubToAssociationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_until', models.DateField()),
                ('valid_from', models.DateField()),
                ('approved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approved_clubtoassociationmemberships', related_query_name='clubtoassociationmembership_approver', to=settings.AUTH_USER_MODEL)),
                ('association', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_management.Association')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_management.Club')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_clubtoassociationmemberships', related_query_name='clubtoassociationmembership_reporter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'pm_ClubToAssociationMembership',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=200)),
                ('lastname', models.CharField(max_length=200)),
                ('birthdate', models.DateField()),
                ('sex', models.CharField(choices=[['male', 'male'], ['female', 'female']], max_length=6)),
            ],
            options={
                'db_table': 'pm_Person',
            },
        ),
        migrations.CreateModel(
            name='PersonToAssociationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_until', models.DateField()),
                ('valid_from', models.DateField()),
                ('role', models.CharField(choices=[['President', 'President'], ['Vicepresident', 'Vicepresident'], ['Treasurer', 'Treasurer'], ['secretary', 'secretary']], default='Member', max_length=300)),
                ('approved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approved_persontoassociationmemberships', related_query_name='persontoassociationmembership_approver', to=settings.AUTH_USER_MODEL)),
                ('association', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_management.Association')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_management.Person')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_persontoassociationmemberships', related_query_name='persontoassociationmembership_reporter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'pm_PersonToAssociationMembership',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonToClubMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_until', models.DateField()),
                ('valid_from', models.DateField()),
                ('role', models.CharField(choices=[['President', 'President'], ['Vicepresident', 'Vicepresident'], ['Treasurer', 'Treasurer'], ['secretary', 'secretary'], ['Member', 'Member']], default='Member', max_length=300)),
                ('approved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approved_persontoclubmemberships', related_query_name='persontoclubmembership_approver', to=settings.AUTH_USER_MODEL)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_management.Club')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_management.Person')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_persontoclubmemberships', related_query_name='persontoclubmembership_reporter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'pm_PersonToClubMembership',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonToTeamMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_until', models.DateField()),
                ('valid_from', models.DateField()),
                ('role', models.CharField(choices=[['Player', 'Player'], ['Coach', 'Coach'], ['Captain', 'Captain'], ['Spiritcaptain', 'Spiritcaptain']], default='', max_length=300)),
                ('number', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('approved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approved_persontoteammemberships', related_query_name='persontoteammembership_approver', to=settings.AUTH_USER_MODEL)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_management.Person')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_persontoteammemberships', related_query_name='persontoteammembership_reporter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'pm_PersonToTeamMembership',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('founded_on', models.DateField()),
                ('dissolved_on', models.DateField()),
                ('description', models.TextField()),
                ('club_membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_management.Club')),
                ('members', models.ManyToManyField(through='player_management.PersonToTeamMembership', to='player_management.Person')),
            ],
            options={
                'db_table': 'pm_Team',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='persontoteammembership',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player_management.Team'),
        ),
        migrations.AddField(
            model_name='person',
            name='association_memberships',
            field=models.ManyToManyField(through='player_management.PersonToAssociationMembership', to='player_management.Association'),
        ),
        migrations.AddField(
            model_name='person',
            name='club_memberships',
            field=models.ManyToManyField(through='player_management.PersonToClubMembership', to='player_management.Club'),
        ),
        migrations.AddField(
            model_name='person',
            name='team_memberships',
            field=models.ManyToManyField(through='player_management.PersonToTeamMembership', to='player_management.Team'),
        ),
        migrations.AddField(
            model_name='club',
            name='associations_memberships',
            field=models.ManyToManyField(through='player_management.ClubToAssociationMembership', to='player_management.Club'),
        ),
        migrations.AddField(
            model_name='club',
            name='members',
            field=models.ManyToManyField(through='player_management.PersonToClubMembership', to='player_management.Person'),
        ),
        migrations.AddField(
            model_name='association',
            name='board',
            field=models.ManyToManyField(through='player_management.PersonToAssociationMembership', to='player_management.Person'),
        ),
        migrations.AddField(
            model_name='association',
            name='club_members',
            field=models.ManyToManyField(through='player_management.ClubToAssociationMembership', to='player_management.Club'),
        ),
        migrations.AddField(
            model_name='association',
            name='governing_associations',
            field=models.ManyToManyField(related_name='association_members', through='player_management.AssociationToAssociationMembership', to='player_management.Association'),
        ),
    ]
